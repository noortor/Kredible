{"ast":null,"code":"// import firebase from \"firebase/compat/app\";\n// import \"firebase/compat/auth\"\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\"; // import axios from \"axios\";\n// const firebaseConfig = {\n//     apiKey: process.env.FIREBASE_API_KEY,\n//     authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n//     databaseURL: process.env.FIREBASE_DATABASE_URL,\n//     projectId: process.env.FIREBASE_PROJECT_ID,\n//     storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n//     messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n//     appId: process.env.FIREBASE_APP_ID\n// }\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCSRigYRYNq2t1Poafz95TskxiOPr0-BqQ\",\n  authDomain: \"kredible-b955d.firebaseapp.com\",\n  projectId: \"kredible-b955d\",\n  storageBucket: \"kredible-b955d.appspot.com\",\n  messagingSenderId: \"550602858878\",\n  appId: \"1:550602858878:web:9e86f53ca34a874630532f\"\n};\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app); // Initialize Firebase\n// if (!firebase.apps.length) {\n//     firebase.initializeApp(firebaseConfig);\n// } else {\n//     firebase.app(); // if already initialized, use that one\n// }\n// export const auth = firebase.auth();\n// axios.interceptors.request.use(async config => {\n//     // all outgoing axios requests now automatically have the JWT token identifying the logged in user added to headers.authorization\n//     // this means that the server can automatically verify requests which need users to be logged in\n//     if (auth.currentUser && config.headers) {\n//         config.headers.authorization = \"Bearer \" + (await auth.currentUser.getIdToken());\n//     }\n//     return config;\n// });\n// export default firebase","map":{"version":3,"sources":["/Users/nmahini/Desktop/kredit4kids/src/firebase.js"],"names":["initializeApp","getAuth","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth"],"mappings":"AAAA;AACA;AAEA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,QAAwB,eAAxB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,gCAFO;AAGnBC,EAAAA,SAAS,EAAE,gBAHQ;AAInBC,EAAAA,aAAa,EAAE,4BAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAAvB;AASA,MAAMC,GAAG,GAAGT,aAAa,CAACE,cAAD,CAAzB;AAEA,OAAO,MAAMQ,IAAI,GAAGT,OAAO,CAACQ,GAAD,CAApB,C,CACP;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import firebase from \"firebase/compat/app\";\n// import \"firebase/compat/auth\"\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\n// import axios from \"axios\";\n\n// const firebaseConfig = {\n//     apiKey: process.env.FIREBASE_API_KEY,\n//     authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n//     databaseURL: process.env.FIREBASE_DATABASE_URL,\n//     projectId: process.env.FIREBASE_PROJECT_ID,\n//     storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n//     messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n//     appId: process.env.FIREBASE_APP_ID\n// }\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCSRigYRYNq2t1Poafz95TskxiOPr0-BqQ\",\n    authDomain: \"kredible-b955d.firebaseapp.com\",\n    projectId: \"kredible-b955d\",\n    storageBucket: \"kredible-b955d.appspot.com\",\n    messagingSenderId: \"550602858878\",\n    appId: \"1:550602858878:web:9e86f53ca34a874630532f\"\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const auth = getAuth(app);\n// Initialize Firebase\n// if (!firebase.apps.length) {\n//     firebase.initializeApp(firebaseConfig);\n// } else {\n//     firebase.app(); // if already initialized, use that one\n// }\n\n// export const auth = firebase.auth();\n\n\n// axios.interceptors.request.use(async config => {\n//     // all outgoing axios requests now automatically have the JWT token identifying the logged in user added to headers.authorization\n//     // this means that the server can automatically verify requests which need users to be logged in\n//     if (auth.currentUser && config.headers) {\n//         config.headers.authorization = \"Bearer \" + (await auth.currentUser.getIdToken());\n//     }\n//     return config;\n// });\n\n// export default firebase"]},"metadata":{},"sourceType":"module"}