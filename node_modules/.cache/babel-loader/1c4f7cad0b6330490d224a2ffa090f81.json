{"ast":null,"code":"var _jsxFileName = \"/Users/nmahini/Desktop/kredit4kids/src/components/Timer.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Timer(props) {\n  _s();\n\n  const [minutes, setMinutes] = useState(props.minutes);\n  const [seconds, setSeconds] = useState(props.seconds);\n  const [timerColor, setTimerColor] = useState(\"white\");\n  useEffect(() => {\n    let interval = setInterval(() => {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n      }\n\n      if (minutes == 0) {\n        setTimerColor(\"red\");\n      } else {\n        setTimerColor(\"white\");\n      }\n\n      if (seconds === 0) {\n        if (minutes === 0) {\n          clearInterval(interval);\n        } else {\n          setMinutes(minutes - 1);\n          setSeconds(59);\n        }\n      }\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"credit-score\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          color: timerColor\n        },\n        children: [\"Minutes: \", minutes, \" Seconds: \", seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Timer, \"UwcqcXxasR7niRPf/JEun3hLtU8=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/nmahini/Desktop/kredit4kids/src/components/Timer.js"],"names":["React","useState","useEffect","Container","Row","Col","Timer","props","minutes","setMinutes","seconds","setSeconds","timerColor","setTimerColor","interval","setInterval","clearInterval","color"],"mappings":";;;AACA,OAAO,sCAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;;;AAIA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAyBR,QAAQ,CAACM,KAAK,CAACC,OAAP,CAAvC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAA0BV,QAAQ,CAACM,KAAK,CAACG,OAAP,CAAxC;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,OAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAIY,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACzB,UAAIL,OAAO,GAAG,CAAd,EAAiB;AACbC,QAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH;;AACD,UAAIF,OAAO,IAAI,CAAf,EAAkB;AAChBK,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAFD,MAEO;AACLA,QAAAA,aAAa,CAAC,OAAD,CAAb;AACD;;AACD,UAAIH,OAAO,KAAK,CAAhB,EAAmB;AACf,YAAIF,OAAO,KAAK,CAAhB,EAAmB;AACfQ,UAAAA,aAAa,CAACF,QAAD,CAAb;AACH,SAFD,MAEO;AACHL,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAG,UAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AACJ;AACJ,KAjBqB,EAiBnB,IAjBmB,CAA1B;AAkBI,WAAO,MAAM;AACTK,MAAAA,aAAa,CAACF,QAAD,CAAb;AACH,KAFD;AAGH,GAtBM,CAAT;AAwBA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,cAArB;AAAA,2BACE,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAEL;AAAT,SAAZ;AAAA,gCACYJ,OADZ,gBAC+BE,OAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAtCQJ,K;;KAAAA,K;AAwCT,eAAeA,KAAf","sourcesContent":["\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap'\n\n\n\nfunction Timer(props) {\n  const [minutes, setMinutes ] = useState(props.minutes);\n  const [seconds, setSeconds ] =  useState(props.seconds);\n  const [timerColor, setTimerColor] = useState(\"white\")\n\n  useEffect(()=>{\n    let interval = setInterval(() => {\n            if (seconds > 0) {\n                setSeconds(seconds - 1);\n            }\n            if (minutes == 0) {\n              setTimerColor(\"red\")\n            } else {\n              setTimerColor(\"white\")\n            }\n            if (seconds === 0) {\n                if (minutes === 0) {\n                    clearInterval(interval)\n                } else {\n                    setMinutes(minutes - 1);\n                    setSeconds(59);\n                }\n            } \n        }, 1000)\n        return () => {\n            clearInterval(interval);\n        };\n    });\n\n  return (\n    <Container className=\"credit-score\">\n      <Row>\n        <Col style={{ color: timerColor }}>\n          Minutes: {minutes} Seconds: {seconds}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}